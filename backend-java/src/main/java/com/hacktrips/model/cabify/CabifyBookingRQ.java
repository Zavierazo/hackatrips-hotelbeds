package com.hacktrips.model.cabify;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import lombok.Data;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
        "stops",
        "start_at",
        "vehicle_type_id",
        "charge_code",
        "rider",
        "message"
})
@Data
public class CabifyBookingRQ {

    /**
     * A 2-tuple with the pick up and drop off locations.
     * (Required)
     *
     */
    @JsonProperty("stops")
    @JsonPropertyDescription("A 2-tuple with the pick up and drop off locations.")
    public List<Stops> stops = null;
    /**
     * The pick up datetime. It should follow the format: YYYY-MM-DD hh:mm. It should be in the local time of the pick up location.
     * (Required)
     *
     */
    @JsonProperty("start_at")
    @JsonPropertyDescription("The pick up datetime. It should follow the format: YYYY-MM-DD hh:mm. It should be in the local time of the pick up location.")
    public String startAt;
    /**
     * The unique identifier of the selected vehicle type, as returned by the estimator.
     * (Required)
     *
     */
    @JsonProperty("vehicle_type_id")
    @JsonPropertyDescription("The unique identifier of the selected vehicle type, as returned by the estimator.")
    public String vehicleTypeId;
    /**
     * An optional code that will be displayed in the invoices generated by Cabify. Can be used to cross-reference the booking to internal data (such
     * as a flight number reference, client id, etcâ€¦).
     *
     */
    @JsonProperty("charge_code")
    @JsonPropertyDescription("An optional code that will be displayed in the invoices generated by Cabify. Can be used to cross-reference the booking to internal data (such as a flight number reference, client id, etc\u2026).")
    public String chargeCode;
    /**
     * Optional information and contact details for the rider. Will allow the driver to contact her in case of any issues with the booking.
     * (Required)
     *
     */
    @JsonProperty("rider")
    @JsonPropertyDescription("Optional information and contact details for the rider. Will allow the driver to contact her in case of any issues with the booking.")
    public Rider rider;
    /**
     * An optional string providing some useful information for the driver.
     *
     */
    @JsonProperty("message")
    @JsonPropertyDescription("An optional string providing some useful information for the driver.")
    public String message;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        additionalProperties.put(name, value);
    }

}
